openapi: 3.0.0
info:
  title: SuperFrog API
  description: |-
    Super Frog API for the WebTech SuperFrog Scheduler project
  contact:
    name: SuperFrog Team
    url: https://github.com/jhmejia/superfrog-webtech
  version: 1.1.12
servers:
  # Update when it is deployed to Production
  - url: localhost:8080/api
    description: Development server
tags:
  - name: superfrogs
    description: What you can do as a spirit director relating to SuperFrogs management. 
  
  - name: requests-management
    description: Requests management from the perspective of a spirit director.

  - name: requests
    description: What you can do as a superfrog relating to requests management.
    
  - name: user
    description: Operations about user
paths:
  /superfrogs:
    get:
      tags:
        - superfrogs
      summary: Get all superfrogs
      description: Get all superfrogs
      operationId: getSuperfrogs
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuperFrog'
        '400':
          description: Invalid status value
        '404':
          description: SuperFrogs not found
    post:
      tags:
        - superfrogs
      summary: Add a new superfrog
      description: Add a new superfrog
      operationId: addSuperfrog
      requestBody:
        description: SuperFrog object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuperFrog'
      responses:
        '405':
          description: Invalid input
  /superfrogs/{superfrogId}:
    get:
      tags:
        - superfrogs
      summary: Find superfrog by ID
      description: Returns a single superfrog
      operationId: getSuperfrogById
      parameters:
        - name: superfrogId
          in: path
          description: ID of superfrog to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuperFrog'
        '400':
          description: Invalid ID supplied
        '404':
          description: SuperFrog not found
    put:
      tags:
        - superfrogs
      summary: Update an existing superfrog
      description: Update an existing superfrog
      operationId: updateSuperfrog
      parameters:
        - name: superfrogId
          in: path
          description: ID of superfrog to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: SuperFrog object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuperFrog'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: SuperFrog not found
        '405':
          description: Validation exception
    delete:
      tags:
        - superfrogs
      summary: Deletes a superfrog
      description: Deletes a superfrog
      operationId: deleteSuperfrog
      parameters:
        - name: superfrogId
          in: path
          description: SuperFrog id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: SuperFrog not found
  /requests:
    get:
      tags:
        - requests-management
      summary: Get all requests, as a spirit director. 
      description: Get all requests
      operationId: getRequests
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request'
        '400':
          description: Invalid status value
        '404':
          description: Requests not found
    post:
      tags:
        - requests-management
      summary: Add a new request
      description: Add a new request
      operationId: addRequest
      requestBody:
        description: Request object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
      responses:
        '405':
          description: Invalid input
  /requests/{requestId}:
    get:
      tags:
        - requests-management
      summary: Find request by ID
      description: Returns a single request
      operationId: getRequestById
      parameters:
        - name: requestId
          in: path
          description: ID of request to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
    put:
      tags:
        - requests-management
      summary: Update an existing request
      description: Update an existing request
      operationId: updateRequest
      parameters:
        - name: requestId
          in: path
          description: ID of request to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Request object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
        '405':
          description: Validation exception
    delete:
      tags:
        - requests
      summary: Deletes a request
      description: Deletes a request
      operationId: deleteRequest
      parameters:
        - name: requestId
          in: path
          description: Request id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
  /requests/{requestId}/assign/{superfrogId}:
    put:
      tags:
        - requests-management
      summary: Assign a superfrog to a request
      description: Assign a superfrog to a request
      operationId: assignSuperfrog
      parameters:
        - name: requestId
          in: path
          description: ID of request to return
          required: true
          schema:
            type: integer
            format: int64
        - name: superfrogId
          in: path
          description: ID of superfrog to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
        '405':
          description: Validation exception
  /requests/{requestId}/unassign:
    put:
      tags:
        - requests-management
      summary: Unassign a superfrog from a request
      description: Unassign a superfrog from a request
      operationId: unassignSuperfrog
      parameters:
        - name: requestId
          in: path
          description: ID of request to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
        '405':
          description: Validation exception
  /requests/{superfrogID}:
    get:
      tags:
        - requests
      summary: Get all requests for a superfrog student
      description: Get all requests for a superfrog student
      operationId: getRequestsBySuperfrogID
      parameters:
        - name: superfrogID
          in: path
          description: ID of frog to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request'
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
  /requests/{superfrogID}/status/{status}:
    get:
      tags:
        - requests
      summary: Get all requests for a superfrog student with a specific status
      description: Get all requests for a superfrog student with a specific status
      operationId: getRequestsBySuperfrogIDAndStatus
      parameters:
        - name: superfrogID
          in: path
          description: ID of frog to return
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: path
          description: Status of request to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request'
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
  /requests/{requestId}/status/{status}:
    put:
      tags:
        - requests-management
      summary: Update the status of a request
      description: Update the status of a request. 
      operationId: updateRequestStatus
      parameters:
        - name: requestId
          in: path
          description: ID of request to return
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: path
          description: Status of request to return
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
        '405':
          description: Validation exception
  /appearances/{superfrogID}:
    get:
      tags:
        - appearances
      summary: Get all appearances for a superfrog student
      description: Get all appearances for a superfrog student
      operationId: getAppearancesBySuperfrogID
      parameters:
        - name: superfrogID
          in: path
          description: ID of frog to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appearance'
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
  /appearances/{superfrogID}/status/{status}:
    put:
      tags:
        - appearances
      summary: Update the status of an appearance
      description: A superfrog student can mark an appearance as complete
      operationId: updateAppearanceStatus
      parameters:
        - name: superfrogID
          in: path
          description: ID of frog to return
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: path
          description: Status of appearance to return
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Appearance not found
        '405':
          description: Validation exception
  /user/create:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
components:
  schemas:
    SuperFrog:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        userStatus:
          type: integer
          format: int32
          description: User Status
        active:
          type: boolean

    Request:
      type: object
      properties:
        id:
          type: integer
          format: int64
        superfrogID:
          type: integer
          format: int64
        status:
          type: string
        description:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        phone:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
    api_key_query:
      type: apiKey
      name: api_key
      in: query
      